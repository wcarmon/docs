strings.contains.dart.code = "TODO"
strings.contains.dart.url = "TODO"
strings.contains.go.code = "strings.Contains($EXPR$, needle)"
strings.contains.go.url = "https://pkg.go.dev/strings#Contains"
strings.contains.java.code = "TODO"
strings.contains.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#contains(java.lang.CharSequence)"
strings.contains.kotlin.code = "TODO"
strings.contains.kotlin.url = "TODO"
strings.contains.python.code = "TODO"
strings.contains.python.url = "TODO"
strings.contains.rust.code = "$EXPR$.contains(needle)"
strings.contains.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.contains"
strings.contains.ts.code = "TODO"
strings.contains.ts.url = "TODO"
strings.endswith.dart.code = ""
strings.endswith.dart.url = "TODO"
strings.endswith.go.code = "strings.HasSuffix($EXPR$, sfx)"
strings.endswith.go.url = "https://pkg.go.dev/strings#HasSuffix"
strings.endswith.java.code = "$EXPR$.endsWith(sfx)"
strings.endswith.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#endsWith(java.lang.String)"
strings.endswith.kotlin.code = "TODO"
strings.endswith.kotlin.url = "TODO"
strings.endswith.python.code = "TODO"
strings.endswith.python.url = "TODO"
strings.endswith.rust.code = "$EXPR$.ends_with(sfx)"
strings.endswith.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.ends_with"
strings.endswith.ts.code = "TODO"
strings.endswith.ts.url = "TODO"
strings.equals.dart.code = "TODO"
strings.equals.dart.url = "TODO"
strings.equals.go.code = "$EXPR$ == s2"
strings.equals.go.url = "https://go.dev/ref/spec#Comparison_operators"
strings.equals.java.code = '$EXPR$.equals(s2)'
strings.equals.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#equals(java.lang.Object)"
strings.equals.kotlin.code = "TODO"
strings.equals.kotlin.url = "TODO"
strings.equals.python.code = "TODO"
strings.equals.python.url = "TODO"
strings.equals.rust.code = "$EXPR$ == s2"
strings.equals.rust.url = "https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#tymethod.eq"
strings.equals.ts.code = "TODO"
strings.equals.ts.url = "TODO"
strings.equalsIgnoreCase.dart.code = "TODO"
strings.equalsIgnoreCase.dart.url = "TODO"
strings.equalsIgnoreCase.go.code = "strings.EqualsFold($EXPR$, s2)"
strings.equalsIgnoreCase.go.url = "https://pkg.go.dev/strings#EqualFold"
strings.equalsIgnoreCase.java.code = "TODO"
strings.equalsIgnoreCase.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#equalsIgnoreCase(java.lang.String)"
strings.equalsIgnoreCase.kotlin.code = "TODO"
strings.equalsIgnoreCase.kotlin.url = "TODO"
strings.equalsIgnoreCase.python.code = "TODO"
strings.equalsIgnoreCase.python.url = "TODO"
strings.equalsIgnoreCase.rust.code = "$EXPR$.eq_ignore_ascii_case(&s2)"
strings.equalsIgnoreCase.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.eq_ignore_ascii_case"
strings.equalsIgnoreCase.ts.code = "TODO"
strings.equalsIgnoreCase.ts.url = "TODO"
strings.isBlank.dart.code = "TODO"
strings.isBlank.dart.url = "TODO"
strings.isBlank.go.code = 'strings.TrimSpace(s) == ""'
strings.isBlank.go.url = "https://pkg.go.dev/strings#TrimSpace"
strings.isBlank.java.code = "TODO"
strings.isBlank.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isBlank()"
strings.isBlank.kotlin.code = "TODO"
strings.isBlank.kotlin.url = "TODO"
strings.isBlank.python.code = '$EXPR$.strip() == ""'
strings.isBlank.python.url = "https://docs.python.org/3/library/stdtypes.html#str.strip"
strings.isBlank.rust.code = "$EXPR$.trim().is_empty()"
strings.isBlank.rust.url = "TODO"
strings.isBlank.ts.code = "TODO"
strings.isBlank.ts.url = "TODO"
strings.isEmpty.dart.code = "TODO"
strings.isEmpty.dart.url = "TODO"
strings.isEmpty.go.code = "len($EXPR$) == 0"
strings.isEmpty.go.url = "https://pkg.go.dev/builtin#len"
strings.isEmpty.java.code = "$EXPR$.isEmpty"
strings.isEmpty.java.url = "https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html#isEmpty()"
strings.isEmpty.kotlin.code = "TODO"
strings.isEmpty.kotlin.url = "TODO"
strings.isEmpty.python.code = '$EXPR$ == ""'
strings.isEmpty.python.url = "https://docs.python.org/3/library/stdtypes.html#comparisons"
strings.isEmpty.rust.code = "TODO"
strings.isEmpty.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.is_empty"
strings.isEmpty.ts.code = "TODO"
strings.isEmpty.ts.url = "TODO"
strings.join.dart.code = "TODO"
strings.join.dart.url = "TODO"
strings.join.go.code = "strings.Join(slice, sep)"
strings.join.go.url = "https://pkg.go.dev/strings#Join"
strings.join.java.code = 'String.join(" ", List.of("a", "b", "c"))'
strings.join.java.url = "https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html#join(java.lang.CharSequence,java.lang.Iterable)"
strings.join.kotlin.code = "TODO"
strings.join.kotlin.url = "TODO"
strings.join.python.code = "TODO"
strings.join.python.url = "https://docs.python.org/3/library/stdtypes.html#str.join"
strings.join.rust.code = 'vec!["a", "b", "c"].join(sep);'
strings.join.rust.url = "https://doc.rust-lang.org/std/primitive.slice.html#method.join"
strings.join.ts.code = "TODO"
strings.join.ts.url = "TODO"
strings.length.dart.code = "TODO"
strings.length.dart.url = "TODO"
strings.length.go.code = "len($EXPR$)"
strings.length.go.url = "https://pkg.go.dev/builtin#len"
strings.length.java.code = "TODO"
strings.length.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#length()"
strings.length.kotlin.code = "TODO"
strings.length.kotlin.url = "TODO"
strings.length.python.code = "TODO"
strings.length.python.url = "TODO"
strings.length.rust.code = "TODO"
strings.length.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.len"
strings.length.ts.code = "TODO"
strings.length.ts.url = "TODO"
strings.repeat.dart.code = "TODO"
strings.repeat.dart.url = "TODO"
strings.repeat.go.code = "strings.Repeat(s, n)"
strings.repeat.go.url = "https://pkg.go.dev/strings#Repeat"
strings.repeat.java.code = "TODO"
strings.repeat.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat(int)"
strings.repeat.kotlin.code = "TODO"
strings.repeat.kotlin.url = "TODO"
strings.repeat.python.code = "TODO"
strings.repeat.python.url = "TODO"
strings.repeat.rust.code = "TODO"
strings.repeat.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.repeat"
strings.repeat.ts.code = "TODO"
strings.repeat.ts.url = "TODO"
strings.replaceAll.dart.code = "TODO"
strings.replaceAll.dart.url = "TODO"
strings.replaceAll.go.code = "TODO"
strings.replaceAll.go.url = "TODO"
strings.replaceAll.java.code = "TODO"
strings.replaceAll.java.url = "TODO"
strings.replaceAll.kotlin.code = "TODO"
strings.replaceAll.kotlin.url = "TODO"
strings.replaceAll.python.code = "TODO"
strings.replaceAll.python.url = "TODO"
strings.replaceAll.rust.code = "TODO"
strings.replaceAll.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.replace"
strings.replaceAll.ts.code = "TODO"
strings.replaceAll.ts.url = "TODO"
strings.split.dart.code = "TODO"
strings.split.dart.url = "TODO"
strings.split.go.code = "strings.Split(s, sep)"
strings.split.go.url = "https://pkg.go.dev/strings#Split"
strings.split.java.code = "TODO"
strings.split.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#split(java.lang.String)"
strings.split.kotlin.code = "TODO"
strings.split.kotlin.url = "TODO"
strings.split.python.code = "TODO"
strings.split.python.url = "TODO"
strings.split.rust.code = "TODO"
strings.split.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.split"
strings.split.ts.code = "TODO"
strings.split.ts.url = "TODO"
strings.startswith.dart.code = "TODO"
strings.startswith.dart.url = "TODO"
strings.startswith.go.code = "strings.HasPrefix($EXPR$, pfx)"
strings.startswith.go.url = "https://pkg.go.dev/strings#HasPrefix"
strings.startswith.java.code = "TODO"
strings.startswith.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#startsWith(java.lang.String)"
strings.startswith.kotlin.code = "TODO"
strings.startswith.kotlin.url = "TODO"
strings.startswith.python.code = "TODO"
strings.startswith.python.url = "TODO"
strings.startswith.rust.code = "$EXPR$.starts_with(pfx)"
strings.startswith.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.starts_with"
strings.startswith.ts.code = "TODO"
strings.startswith.ts.url = "TODO"
strings.toLower.dart.code = "TODO"
strings.toLower.dart.url = "TODO"
strings.toLower.go.code = "strings.ToLower($EXPR$)"
strings.toLower.go.url = "https://pkg.go.dev/strings#ToLower"
strings.toLower.java.code = "TODO"
strings.toLower.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#toLowerCase()"
strings.toLower.kotlin.code = "TODO"
strings.toLower.kotlin.url = "TODO"
strings.toLower.python.code = "TODO"
strings.toLower.python.url = "TODO"
strings.toLower.rust.code = "$EXPR$.to_lowercase()"
strings.toLower.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.to_lowercase"
strings.toLower.ts.code = "TODO"
strings.toLower.ts.url = "TODO"
strings.toUpper.dart.code = "TODO"
strings.toUpper.dart.url = "TODO"
strings.toUpper.go.code = "strings.ToUpper($EXPR$)"
strings.toUpper.go.url = "https://pkg.go.dev/strings#ToUpper"
strings.toUpper.java.code = "TODO"
strings.toUpper.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#toUpperCase()"
strings.toUpper.kotlin.code = "TODO"
strings.toUpper.kotlin.url = "TODO"
strings.toUpper.python.code = "TODO"
strings.toUpper.python.url = "TODO"
strings.toUpper.rust.code = "$EXPR$.to_uppercase()"
strings.toUpper.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.to_uppercase"
strings.toUpper.ts.code = "TODO"
strings.toUpper.ts.url = "TODO"
strings.trim.dart.code = "TODO"
strings.trim.dart.url = "TODO"
strings.trim.go.code = "strings.TrimSpace($EXPR$)"
strings.trim.go.url = "https://pkg.go.dev/strings#TrimSpace"
strings.trim.java.code = "TODO"
strings.trim.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#trim()"
strings.trim.kotlin.code = "TODO"
strings.trim.kotlin.url = "TODO"
strings.trim.python.code = "TODO"
strings.trim.python.url = "TODO"
strings.trim.rust.code = "$EXPR$.trim()"
strings.trim.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.trim"
strings.trim.ts.code = "TODO"
strings.trim.ts.url = "TODO"


# TODO: [String::`charAt`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#charAt(int)) | `"abc"[i:i+1]` or `( []rune("abc") )[3] == 'd'`| TODO |
# TODO: [String::`compareTo`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#compareTo(java.lang.String)) |`s1 < s2` or [`strings.Compare(...)`](https://pkg.go.dev/strings#Compare) | TODO |
# TODO: [String::`format`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#format(java.lang.String,java.lang.Object...)) | [`fmt.Sprintf(s, ...)`](https://pkg.go.dev/fmt#Sprintf) | TODO |
# TODO: [String::`getBytes`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#getBytes()) |`[]byte($EXPR$)`| TODO |
# TODO: [String::`indexOf`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#indexOf(int)) | [`strings.Index(haystack, needle)`](https://pkg.go.dev/strings#Index) | TODO |
# TODO: [String::`lastIndexOf`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#lastIndexOf(int)) | [`strings.LastIndex(haystack, needle)`](https://pkg.go.dev/strings#LastIndex) | TODO |
# TODO: [String::`replaceAll`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#replaceAll(java.lang.String,java.lang.String)) | [`strings.ReplaceAll(...)`](https://pkg.go.dev/strings#ReplaceAll) | TODO |
# TODO: [String::`substring`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#substring(int,int)) |`"abcde"[2:4] == "cd"`| TODO |
# TODO: [String::`toCharArray`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#toCharArray()) |Use range in loops, or `[]rune($EXPR$)`| TODO |
# TODO: [String::`valueOf`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#valueOf(java.lang.Object)) |`string(foo)`| TODO |
# TODO: [StringUtils::containsAny](https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#containsAny-java.lang.CharSequence-char...-) | [`strings.ContainsAny(haystack,needles)`](https://pkg.go.dev/strings#ContainsAny) | TODO |

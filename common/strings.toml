strings.op.bytes.bash.code = "TODO"
strings.op.bytes.bash.url = "TODO"
strings.op.bytes.dart.code = "$EXPR$.runes"
strings.op.bytes.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/runes.html"
strings.op.bytes.go.code = "[]byte($EXPR$)"
strings.op.bytes.go.url = "TODO"
strings.op.bytes.java.code = '$EXPR$.getBytes("UTF8")'
strings.op.bytes.java.url = "https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html#getBytes(java.lang.String)"
strings.op.bytes.kotlin.code = "TODO"
strings.op.bytes.kotlin.url = "TODO"
strings.op.bytes.python.code = "$EXPR$.encode()"
strings.op.bytes.python.url = "https://docs.python.org/3/library/stdtypes.html#str.encode"
strings.op.bytes.rust.code = "$EXPR$.as_bytes()"
strings.op.bytes.rust.url = "https://doc.rust-lang.org/std/string/struct.String.html#method.as_bytes"
strings.op.bytes.ts.code = "new TextEncoder().encode($EXPR$)"
strings.op.bytes.ts.url = "https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder"
strings.op.charAt.ash.code = "IN='abc'; OUT=${IN:2:1}"
strings.op.charAt.ash.url = "https://tldp.org/LDP/abs/html/string-manipulation.html"
strings.op.charAt.bash.code = "IN='abc'; OUT=${IN:2:1}"
strings.op.charAt.bash.url = "https://tldp.org/LDP/abs/html/string-manipulation.html"
strings.op.charAt.dart.code = "$EXPR$[3]"
strings.op.charAt.dart.url = ""
strings.op.charAt.go.code = "$EXPR$[i:i+1] /* or */ ( []rune($EXPR$) )[3]"
strings.op.charAt.go.url = ""
strings.op.charAt.java.code = "$EXPR$.charAt(3)"
strings.op.charAt.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#charAt(int)"
strings.op.charAt.kotlin.code = "TODO"
strings.op.charAt.kotlin.url = "TODO"
strings.op.charAt.python.code = "$EXPR$[3]"
strings.op.charAt.python.url = "TODO"
strings.op.charAt.rust.code = "$EXPR$.chars().nth(3)"
strings.op.charAt.rust.url = "https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.nth"
strings.op.charAt.ts.code = "$EXPR$[3]"
strings.op.charAt.ts.url = ""
strings.op.chars.bash.code = "TODO"
strings.op.chars.bash.url = "TODO"
strings.op.chars.dart.code = "$EXPR$.split('')"
strings.op.chars.dart.url = "https://api.flutter.dev/flutter/dart-core/String/split.html"
strings.op.chars.go.code = "range in $EXPR$ /* or */ []rune($EXPR$)"
strings.op.chars.go.url = "https://go.dev/ref/spec#For_statements"
strings.op.chars.java.code = "$EXPR$.toCharArray()"
strings.op.chars.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#toCharArray()"
strings.op.chars.kotlin.code = "TODO"
strings.op.chars.kotlin.url = "TODO"
strings.op.chars.python.code = "list($EXPR$)"
strings.op.chars.python.url = "https://docs.python.org/3/library/stdtypes.html#list"
strings.op.chars.rust.code = "$EXPR$.chars()"
strings.op.chars.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.chars"
strings.op.chars.ts.code = "$EXPR$.split('')"
strings.op.chars.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"
strings.op.compareTo.bash.code = "TODO"
strings.op.compareTo.bash.url = "TODO"
strings.op.compareTo.dart.code = "$EXPR$.compareTo(s2)"
strings.op.compareTo.dart.url = "https://api.flutter.dev/flutter/dart-core/String/compareTo.html"
strings.op.compareTo.go.code = "strings.Compare($EXPR$, s2)"
strings.op.compareTo.go.url = "https://pkg.go.dev/strings#Compare"
strings.op.compareTo.java.code = "$EXPR$.compareTo(s2)"
strings.op.compareTo.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#compareTo(java.lang.String)"
strings.op.compareTo.kotlin.code = "TODO"
strings.op.compareTo.kotlin.url = "TODO"
strings.op.compareTo.python.code = "$EXPR$ < s2"
strings.op.compareTo.python.url = ""
strings.op.compareTo.rust.code = "$EXPR$.cmp(s2) == Ordering::Less"
strings.op.compareTo.rust.url = "https://doc.rust-lang.org/std/cmp/trait.Ord.html#tymethod.cmp"
strings.op.compareTo.ts.code = "$EXPR$.localeCompare(s2)"
strings.op.compareTo.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"
strings.op.contains.bash.code = "TODO"
strings.op.contains.bash.url = "TODO"
strings.op.contains.dart.code = "$EXPR$.contains(needle)"
strings.op.contains.dart.url = "https://api.dart.dev/stable/2.17.0/dart-core/String/contains.html"
strings.op.contains.go.code = "strings.Contains($EXPR$, needle)"
strings.op.contains.go.url = "https://pkg.go.dev/strings#Contains"
strings.op.contains.java.code = "$EXPR$.contains(needle)"
strings.op.contains.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#contains(java.lang.CharSequence)"
strings.op.contains.kotlin.code = "TODO"
strings.op.contains.kotlin.url = "TODO"
strings.op.contains.python.code = "needle in $EXPR$"
strings.op.contains.python.url = "https://docs.python.org/3/library/operator.html#mapping-operators-to-functions"
strings.op.contains.rust.code = "$EXPR$.contains(needle)"
strings.op.contains.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.contains"
strings.op.contains.ts.code = "$EXPR$.indexOf(needle) > -1"
strings.op.contains.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf"
strings.op.endsWith.ash.code = "IN='abc'; if [[ $IN =~ c$ ]]; then echo 'yes'; fi"
strings.op.endsWith.ash.url = "https://riptutorial.com/bash/example/19469/regex-matching"
strings.op.endsWith.bash.code = "IN='abc'; if [[ $IN =~ c$ ]]; then echo 'yes'; fi"
strings.op.endsWith.bash.url = "https://riptutorial.com/bash/example/19469/regex-matching"
strings.op.endsWith.dart.code = "$EXPR$.endsWith(sfx)"
strings.op.endsWith.dart.url = "https://api.dart.dev/stable/2.17.0/dart-core/String/endsWith.html"
strings.op.endsWith.go.code = "strings.HasSuffix($EXPR$, sfx)"
strings.op.endsWith.go.url = "https://pkg.go.dev/strings#HasSuffix"
strings.op.endsWith.java.code = "$EXPR$.endsWith(sfx)"
strings.op.endsWith.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#endsWith(java.lang.String)"
strings.op.endsWith.kotlin.code = "TODO"
strings.op.endsWith.kotlin.url = "TODO"
strings.op.endsWith.python.code = "$EXPR$.endswith(sfx)"
strings.op.endsWith.python.url = "https://docs.python.org/3/library/stdtypes.html?highlight=endswith#str.endswith"
strings.op.endsWith.rust.code = "$EXPR$.ends_with(sfx)"
strings.op.endsWith.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.ends_with"
strings.op.endsWith.ts.code = "$EXPR$.endsWith(sfx)"
strings.op.endsWith.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith"
strings.op.equals.ash.code = "if [ \"a\" = \"a\" ]; then echo 'yes'; fi;"
strings.op.equals.ash.url = ""
strings.op.equals.bash.code = "if [ \"a\" = \"a\" ]; then echo 'yes'; fi;"
strings.op.equals.bash.url = ""
strings.op.equals.dart.code = "$EXPR$ == s2"
strings.op.equals.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/operator_equals.html"
strings.op.equals.go.code = "$EXPR$ == s2"
strings.op.equals.go.url = "https://go.dev/ref/spec#Comparison_operators"
strings.op.equals.java.code = '$EXPR$.equals(s2)'
strings.op.equals.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#equals(java.lang.Object)"
strings.op.equals.kotlin.code = "TODO"
strings.op.equals.kotlin.url = "TODO"
strings.op.equals.python.code = "$EXPR$ == s2"
strings.op.equals.python.url = "https://docs.python.org/3/library/operator.html?highlight=operator#operator.eq"
strings.op.equals.rust.code = "$EXPR$ == s2"
strings.op.equals.rust.url = "https://doc.rust-lang.org/std/cmp/trait.PartialEq.html#tymethod.eq"
strings.op.equals.ts.code = "$EXPR$ === s2"
strings.op.equals.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#comparing_strings"
strings.op.equalsIgnoreCase.bash.code = "TODO"
strings.op.equalsIgnoreCase.bash.url = "TODO"
strings.op.equalsIgnoreCase.dart.code = "$EXPR$.toUpperCase() == s2.toUpperCase()"
strings.op.equalsIgnoreCase.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/toLowerCase.html"
strings.op.equalsIgnoreCase.go.code = "strings.EqualsFold($EXPR$, s2)"
strings.op.equalsIgnoreCase.go.url = "https://pkg.go.dev/strings#EqualFold"
strings.op.equalsIgnoreCase.java.code = "$EXPR$.equalsIgnoreCase(s2)"
strings.op.equalsIgnoreCase.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#equalsIgnoreCase(java.lang.String)"
strings.op.equalsIgnoreCase.kotlin.code = "TODO"
strings.op.equalsIgnoreCase.kotlin.url = "TODO"
strings.op.equalsIgnoreCase.python.code = "$EXPR$.casefold() == s2.casefold()"
strings.op.equalsIgnoreCase.python.url = "https://docs.python.org/3/library/stdtypes.html#str.casefold"
strings.op.equalsIgnoreCase.rust.code = "$EXPR$.eq_ignore_ascii_case(&s2)"
strings.op.equalsIgnoreCase.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.eq_ignore_ascii_case"
strings.op.equalsIgnoreCase.ts.code = "$EXPR$.toUpperCase() === s2.toUpperCase()"
strings.op.equalsIgnoreCase.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#comparing_strings"
strings.op.indexOf.bash.code = "TODO"
strings.op.indexOf.bash.url = "TODO"
strings.op.indexOf.dart.code = "$EXPR$.indexOf(needle)"
strings.op.indexOf.dart.url = "https://api.dart.dev/be/181224/dart-core/String/indexOf.html"
strings.op.indexOf.go.code = "strings.Index(haystack, needle)"
strings.op.indexOf.go.url = "https://pkg.go.dev/strings#Index"
strings.op.indexOf.java.code = "$EXPR$.indexOf(needle)"
strings.op.indexOf.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#indexOf(int)"
strings.op.indexOf.kotlin.code = "TODO"
strings.op.indexOf.kotlin.url = "TODO"
strings.op.indexOf.python.code = "$EXPR$.find(needle)"
strings.op.indexOf.python.url = "https://docs.python.org/3/library/stdtypes.html#str.find"
strings.op.indexOf.rust.code = "$EXPR$.find(needle)"
strings.op.indexOf.rust.url = "https://doc.rust-lang.org/std/string/struct.String.html#method.find"
strings.op.indexOf.ts.code = "$EXPR$.indexOf(needle)"
strings.op.indexOf.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf"
strings.op.isBlank.ash.code = "IN=' '; if [ \"$(echo $IN)\" = \"\" ]; then echo 'yes'; fi;"
strings.op.isBlank.ash.url = ""
strings.op.isBlank.bash.code = "IN=' '; if [ \"$(echo $IN)\" = \"\" ]; then echo 'yes'; fi;"
strings.op.isBlank.bash.url = ""
strings.op.isBlank.dart.code = "$EXPR$.trim().isEmpty"
strings.op.isBlank.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/Iterable/isEmpty.html"
strings.op.isBlank.go.code = 'strings.TrimSpace(s) == ""'
strings.op.isBlank.go.url = "https://pkg.go.dev/strings#TrimSpace"
strings.op.isBlank.java.code = "$EXPR$.isBlank()"
strings.op.isBlank.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isBlank()"
strings.op.isBlank.kotlin.code = "TODO"
strings.op.isBlank.kotlin.url = "TODO"
strings.op.isBlank.python.code = '$EXPR$.strip() == ""'
strings.op.isBlank.python.url = "https://docs.python.org/3/library/stdtypes.html#str.strip"
strings.op.isBlank.rust.code = '$EXPR$.trim() == ""'
strings.op.isBlank.rust.url = "TODO"
strings.op.isBlank.ts.code = '$EXPR$.trim() === ""'
strings.op.isBlank.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim"
strings.op.isEmpty.ash.code = "IN=''; if [ \"$IN\" = \"\" ]; then echo 'yes'; fi;"
strings.op.isEmpty.ash.url = ""
strings.op.isEmpty.bash.code = "IN=''; if [ \"$IN\" = \"\" ]; then echo 'yes'; fi;"
strings.op.isEmpty.bash.url = ""
strings.op.isEmpty.dart.code = "$EXPR$.isEmpty"
strings.op.isEmpty.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/isEmpty.html"
strings.op.isEmpty.go.code = "len($EXPR$) == 0"
strings.op.isEmpty.go.url = "https://pkg.go.dev/builtin#len"
strings.op.isEmpty.java.code = "$EXPR$.isEmpty"
strings.op.isEmpty.java.url = "https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html#isEmpty()"
strings.op.isEmpty.kotlin.code = "TODO"
strings.op.isEmpty.kotlin.url = "TODO"
strings.op.isEmpty.python.code = '$EXPR$ == ""'
strings.op.isEmpty.python.url = "https://docs.python.org/3/library/stdtypes.html#comparisons"
strings.op.isEmpty.rust.code = "$EXPR$ == s2"
strings.op.isEmpty.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.is_empty"
strings.op.isEmpty.ts.code = '$EXPR$ === ""'
strings.op.isEmpty.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#comparing_strings"
strings.op.join.bash.code = "TODO"
strings.op.join.bash.url = "TODO"
strings.op.join.dart.code = '$EXPR$.join(",")'
strings.op.join.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/Iterable/join.html"
strings.op.join.go.code = "strings.Join(slice, sep)"
strings.op.join.go.url = "https://pkg.go.dev/strings#Join"
strings.op.join.java.code = 'String.join(sep, List.of("a", "b", "c"))'
strings.op.join.java.url = "https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html#join(java.lang.CharSequence,java.lang.Iterable)"
strings.op.join.kotlin.code = "TODO"
strings.op.join.kotlin.url = "TODO"
strings.op.join.python.code = '",".join(["a", "b", "c"])'
strings.op.join.python.url = "https://docs.python.org/3/library/stdtypes.html#str.join"
strings.op.join.rust.code = 'vec!["a", "b", "c"].join(sep)'
strings.op.join.rust.url = "https://doc.rust-lang.org/std/primitive.slice.html#method.join"
strings.op.join.ts.code = '["a", "b", "c"].join(sep)'
strings.op.join.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join"
strings.op.lastIndexOf.bash.code = "TODO"
strings.op.lastIndexOf.bash.url = "TODO"
strings.op.lastIndexOf.dart.code = "$EXPR$.lastIndexOf(needle)"
strings.op.lastIndexOf.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/lastIndexOf.html"
strings.op.lastIndexOf.go.code = "strings.LastIndex(haystack, needle)"
strings.op.lastIndexOf.go.url = "https://pkg.go.dev/strings#LastIndex"
strings.op.lastIndexOf.java.code = "$EXPR$.lastIndexOf(needle)"
strings.op.lastIndexOf.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#lastIndexOf(int)"
strings.op.lastIndexOf.kotlin.code = "TODO"
strings.op.lastIndexOf.kotlin.url = "TODO"
strings.op.lastIndexOf.python.code = "$EXPR$.rfind(needle)"
strings.op.lastIndexOf.python.url = "https://docs.python.org/3/library/stdtypes.html#str.rfind"
strings.op.lastIndexOf.rust.code = "$EXPR$.rfind(needle)"
strings.op.lastIndexOf.rust.url = "https://doc.rust-lang.org/std/string/struct.String.html#method.rfind"
strings.op.lastIndexOf.ts.code = "$EXPR$.lastIndexOf(needle)"
strings.op.lastIndexOf.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf"
strings.op.length.ash.code = 'IN="foo"; OUT=${#IN}'
strings.op.length.bash.code = 'IN="foo"; OUT=${#IN}'
strings.op.length.bash.url = "TODO"
strings.op.length.dart.code = "$EXPR$.length"
strings.op.length.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/length.html"
strings.op.length.go.code = "len($EXPR$)"
strings.op.length.go.url = "https://pkg.go.dev/builtin#len"
strings.op.length.java.code = "$EXPR$.length()"
strings.op.length.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#length()"
strings.op.length.kotlin.code = "TODO"
strings.op.length.kotlin.url = "TODO"
strings.op.length.python.code = "len($EXPR$)"
strings.op.length.python.url = "TODO"
strings.op.length.rust.code = "$EXPR$.len()"
strings.op.length.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.len"
strings.op.length.ts.code = "$EXPR$.length"
strings.op.length.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length"
strings.op.repeat.ash.code = "IN='z'; CNT=5; OUT=$(echo $(for i in $(seq 1 $CNT); do printf $IN; done))"
strings.op.repeat.ash.url = "https://linux.die.net/man/1/seq"
strings.op.repeat.bash.code = "IN='z'; CNT=5; OUT=$(echo $(for i in $(seq 1 $CNT); do printf $IN; done))"
strings.op.repeat.bash.url = "https://linux.die.net/man/1/seq"
strings.op.repeat.dart.code = "$EXPR$ * n"
strings.op.repeat.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/operator_multiply.html"
strings.op.repeat.go.code = "strings.Repeat(s, n)"
strings.op.repeat.go.url = "https://pkg.go.dev/strings#Repeat"
strings.op.repeat.java.code = "$EXPR$.repeat(n)"
strings.op.repeat.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat(int)"
strings.op.repeat.kotlin.code = "TODO"
strings.op.repeat.kotlin.url = "TODO"
strings.op.repeat.python.code = "$EXPR$ * n"
strings.op.repeat.python.url = "https://docs.python.org/3/library/stdtypes.html#common-sequence-operations"
strings.op.repeat.rust.code = "$EXPR$.repeat(n)"
strings.op.repeat.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.repeat"
strings.op.repeat.ts.code = "$EXPR$.repeat(n)"
strings.op.repeat.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat"
strings.op.replaceAll.bash.code = "TODO"
strings.op.replaceAll.bash.url = "TODO"
strings.op.replaceAll.dart.code = "$EXPR$.replaceAll(RegExp(r'ab'), new)"
strings.op.replaceAll.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/replaceAll.html"
strings.op.replaceAll.go.code = "strings.ReplaceAll($EXPR$, old, new)"
strings.op.replaceAll.go.url = "https://pkg.go.dev/strings#ReplaceAll"
strings.op.replaceAll.java.code = "$EXPR$.replaceAll(old, new)"
strings.op.replaceAll.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#replaceAll(java.lang.String,java.lang.String)"
strings.op.replaceAll.kotlin.code = "TODO"
strings.op.replaceAll.kotlin.url = "TODO"
strings.op.replaceAll.python.code = "$EXPR$.replace(old, new, -1)"
strings.op.replaceAll.python.url = "https://docs.python.org/3/library/stdtypes.html#str.replace"
strings.op.replaceAll.rust.code = "$EXPR$.replace(old, new)"
strings.op.replaceAll.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.replace"
strings.op.replaceAll.ts.code = "$EXPR$.replaceAll(old, new)"
strings.op.replaceAll.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll"
strings.op.split.bash.code = "TODO"
strings.op.split.bash.url = "TODO"
strings.op.split.dart.code = "$EXPR$.split(sep)"
strings.op.split.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/split.html"
strings.op.split.go.code = "strings.Split($EXPR$, sep)"
strings.op.split.go.url = "https://pkg.go.dev/strings#Split"
strings.op.split.java.code = "$EXPR$.split(sep, 0)"
strings.op.split.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#split(java.lang.String)"
strings.op.split.kotlin.code = "TODO"
strings.op.split.kotlin.url = "TODO"
strings.op.split.python.code = "$EXPR$.split(sep)"
strings.op.split.python.url = "https://docs.python.org/3/library/stdtypes.html#str.split"
strings.op.split.rust.code = 'let v: Vec<_> = "$EXPR$".split(sep).collect()'
strings.op.split.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.split"
strings.op.split.ts.code = "$EXPR$.split(sep)"
strings.op.split.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split"
strings.op.startsWith.ash.code = "IN='abc'; if [[ $IN =~ ^ab ]]; then echo 'yes'; fi"
strings.op.startsWith.ash.url = "https://riptutorial.com/bash/example/19469/regex-matching"
strings.op.startsWith.bash.code = "IN='abc'; if [[ $IN =~ ^ab ]]; then echo 'yes'; fi"
strings.op.startsWith.bash.url = "https://riptutorial.com/bash/example/19469/regex-matching"
strings.op.startsWith.dart.code = "$EXPR$.startsWith(pfx)"
strings.op.startsWith.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/startsWith.html"
strings.op.startsWith.go.code = "strings.HasPrefix($EXPR$, pfx)"
strings.op.startsWith.go.url = "https://pkg.go.dev/strings#HasPrefix"
strings.op.startsWith.java.code = "$EXPR$.startsWith(pfx)"
strings.op.startsWith.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#startsWith(java.lang.String)"
strings.op.startsWith.kotlin.code = "TODO"
strings.op.startsWith.kotlin.url = "TODO"
strings.op.startsWith.python.code = "$EXPR$.startswith(pfx)"
strings.op.startsWith.python.url = "https://docs.python.org/3/library/stdtypes.html#str.startswith"
strings.op.startsWith.rust.code = "$EXPR$.starts_with(pfx)"
strings.op.startsWith.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.starts_with"
strings.op.startsWith.ts.code = "$EXPR$.startsWith(pfx)"
strings.op.startsWith.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith"
strings.op.substring.bash.code = "TODO"
strings.op.substring.bash.url = "TODO"
strings.op.substring.dart.code = "$EXPR$.substring(start, end)"
strings.op.substring.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/substring.html"
strings.op.substring.go.code = '"abcde"[2:4] == "cd"'
strings.op.substring.go.url = "TODO"
strings.op.substring.java.code = '"abcde".substring(2, 4).equals("cd")'
strings.op.substring.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#substring(int,int)"
strings.op.substring.kotlin.code = "TODO"
strings.op.substring.kotlin.url = "TODO"
strings.op.substring.python.code = '"abcde"[2:4] == "cd"'
strings.op.substring.python.url = "https://docs.python.org/3/library/functions.html?highlight=slice#slice"
strings.op.substring.rust.code = '&"abcde"[2..4] == "cd"'
strings.op.substring.rust.url = "https://doc.rust-lang.org/nightly/book/ch08-02-strings.html#slicing-strings"
strings.op.substring.ts.code = '"abcde".substring(2,4) === "cd"'
strings.op.substring.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring"
strings.op.toLower.ash.code = "IN='FOO'; OUT=$(echo $IN | tr '[:upper:]' '[:lower:]')"
strings.op.toLower.ash.url = "https://linuxcommand.org/lc3_man_pages/tr1.html"
strings.op.toLower.bash.code = "IN='FOO'; OUT=$(echo $IN | tr '[:upper:]' '[:lower:]')"
strings.op.toLower.bash.url = "https://linuxcommand.org/lc3_man_pages/tr1.html"
strings.op.toLower.dart.code = "$EXPR$.toLowerCase()"
strings.op.toLower.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/toLowerCase.html"
strings.op.toLower.go.code = "strings.ToLower($EXPR$)"
strings.op.toLower.go.url = "https://pkg.go.dev/strings#ToLower"
strings.op.toLower.java.code = "$EXPR$.toLowerCase(Locale.ROOT)"
strings.op.toLower.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#toLowerCase()"
strings.op.toLower.kotlin.code = "TODO"
strings.op.toLower.kotlin.url = "TODO"
strings.op.toLower.python.code = "$EXPR$.lower()"
strings.op.toLower.python.url = "https://docs.python.org/3/library/stdtypes.html#str.lower"
strings.op.toLower.rust.code = "$EXPR$.to_lowercase()"
strings.op.toLower.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.to_lowercase"
strings.op.toLower.ts.code = "$EXPR$.toLowerCase()"
strings.op.toLower.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase"
strings.op.toUpper.ash.code = "IN='foo'; OUT=$(echo $IN | tr '[:lower:]' '[:upper:]')"
strings.op.toUpper.ash.url = "https://linuxcommand.org/lc3_man_pages/tr1.html"
strings.op.toUpper.bash.code = "IN='foo'; OUT=$(echo $IN | tr '[:lower:]' '[:upper:]')"
strings.op.toUpper.bash.url = "https://linuxcommand.org/lc3_man_pages/tr1.html"
strings.op.toUpper.dart.code = "$EXPR$.toUpperCase()"
strings.op.toUpper.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/toUpperCase.html"
strings.op.toUpper.go.code = "strings.ToUpper($EXPR$)"
strings.op.toUpper.go.url = "https://pkg.go.dev/strings#ToUpper"
strings.op.toUpper.java.code = "$EXPR$.toUpperCase(Locale.ROOT)"
strings.op.toUpper.java.url = "https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#toUpperCase()"
strings.op.toUpper.kotlin.code = "TODO"
strings.op.toUpper.kotlin.url = "TODO"
strings.op.toUpper.python.code = "$EXPR$.upper()"
strings.op.toUpper.python.url = "https://docs.python.org/3/library/stdtypes.html#str.upper"
strings.op.toUpper.rust.code = "$EXPR$.to_uppercase()"
strings.op.toUpper.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.to_uppercase"
strings.op.toUpper.ts.code = "$EXPR$.toUpperCase()"
strings.op.toUpper.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase"
strings.op.trim.ash.code = "IN=' foo '; OUT=$(echo $IN)"
strings.op.trim.ash.url = "http://mywiki.wooledge.org/WordSplitting"
strings.op.trim.bash.code = "IN=' foo '; OUT=$(echo $IN)"
strings.op.trim.bash.url = "http://mywiki.wooledge.org/WordSplitting"
strings.op.trim.dart.code = "$EXPR$.trim()"
strings.op.trim.dart.url = "https://api.dart.dev/stable/2.17.6/dart-core/String/trim.html"
strings.op.trim.go.code = "strings.TrimSpace($EXPR$)"
strings.op.trim.go.url = "https://pkg.go.dev/strings#TrimSpace"
strings.op.trim.java.code = "$EXPR$.strip()"
strings.op.trim.java.url = "https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html#strip()"
strings.op.trim.kotlin.code = "TODO"
strings.op.trim.kotlin.url = "TODO"
strings.op.trim.python.code = "$EXPR$.strip()"
strings.op.trim.python.url = "https://docs.python.org/3/library/stdtypes.html#str.strip"
strings.op.trim.rust.code = "$EXPR$.trim()"
strings.op.trim.rust.url = "https://doc.rust-lang.org/std/primitive.str.html#method.trim"
strings.op.trim.ts.code = "$EXPR$.trim()"
strings.op.trim.ts.url = "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim"

strings.op.bytes.ash.code = "TODO"
strings.op.bytes.ash.url = "TODO"
strings.op.chars.ash.code = "TODO"
strings.op.chars.ash.url = "TODO"
strings.op.compareTo.ash.code = "TODO"
strings.op.compareTo.ash.url = "TODO"
strings.op.contains.ash.code = "TODO"
strings.op.contains.ash.url = "TODO"
strings.op.equalsIgnoreCase.ash.code = "TODO"
strings.op.equalsIgnoreCase.ash.url = "TODO"
strings.op.indexOf.ash.code = "TODO"
strings.op.indexOf.ash.url = "TODO"
strings.op.join.ash.code = "TODO"
strings.op.join.ash.url = "TODO"
strings.op.lastIndexOf.ash.code = "TODO"
strings.op.lastIndexOf.ash.url = "TODO"
strings.op.length.ash.url = "TODO"
strings.op.replaceAll.ash.code = "TODO"
strings.op.replaceAll.ash.url = "TODO"
strings.op.split.ash.code = "TODO"
strings.op.split.ash.url = "TODO"
strings.op.substring.ash.code = "TODO"
strings.op.substring.ash.url = "TODO"

# ----------------------------------------
strings.alias = [
    ["cmp", "compareTo"],
    ["eic", "equalsFold", "equalsIgnoreCase"],
    ["endsWith", "hasSuffix"],
    ["eq", "equals"],
    ["hasPrefix", "startsWith"],
    ["find", "index", "indexOf"],
    ["lastIndex", "lastIndexOf"],
    ["len", "length", "size"],
    ["charAt", "nth"],
    ["strip", "trim", "trimSpace"],
    ["toUpper", "toUpperCase", "upper"],
]

# --- Bash
# Verified:     [ 'a' == 'b' ] && echo 'yes'
# Verified:     if [ "a" = "a" ]; then echo 'yes'; fi;
# Verified:     if [ "A" == "B" ]; then echo 'yes'; fi

# --- Ash
# Verified:     if [ "a" = "a" ]; then echo 'yes'; fi;

# IN1="A"; echo ${IN1,,}

# IN='z'; CNT=5; OUT=$(echo $(for i in $(seq 1 $CNT); do printf $IN; done))

# IN='abc'; OUT=${IN:2:1}; echo $OUT

# --- TODO

# TODO: [String::`format`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#format(java.lang.String,java.lang.Object...)) | [`fmt.Sprintf(s, ...)`](https://pkg.go.dev/fmt#Sprintf) | TODO |
# TODO: [String::`valueOf`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#valueOf(java.lang.Object)) |`string(foo)` fmt.Sprintf("%v")| TODO |

# --------------------------------------------------------------------
# -- Debugging:
#
#
# kubectl describe deploy jaeger-deploy
# kubectl describe po $(kubectl get pods -l app=jaeger --output=jsonpath={.items..metadata.name});
#
#
# -----------------------------------
# -- Logs & Events
# -----------------------------------
# kubectl logs $(kubectl get pods -l app=jaeger --output=jsonpath={.items..metadata.name});
# kubectl logs --selector app=jaeger
#
# kubectl get events --namespace=default
# -- (new events at bottom)
#
# POD_NAME="$(kubectl get pods -l app=jaeger --output=jsonpath={.items..metadata.name})";
#
#
# -----------------------------------
# -- Debug running container
# -----------------------------------
# kubectl exec -it deploy/jaeger-deploy -- /bin/ash;
# kubectl exec -it deploy/jaeger-deploy -- env | sort;
#
#
# -----------------------------------
# -- Debug the Image
# -----------------------------------
# kubectl delete pod debug-jaeger;
# kubectl run debug-jaeger --image=jaegertracing/all-in-one:1.52 --env="SPAN_STORAGE_TYPE=badger"
# kubectl exec -it debug-jaeger -- /bin/ash;
#
#
# -----------------------------------
# -- Delete/Cleanup
# -----------------------------------
# kubectl delete deploy jaeger-deploy;
#
#
# -----------------------------------
# -- Official Jaeger Ports:
# -----------------------------------
# - See https://www.jaegertracing.io/docs/1.52/deployment/
#
#
# -----------------------------------
# -- Linux user id: 10001
# -----------------------------------
# -- See https://github.com/jaegertracing/jaeger/blob/main/cmd/all-in-one/Dockerfile#L6C5-L6C13
#
# --------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jaeger
  name: jaeger-deploy
  namespace: default

spec:
  replicas: 1

  selector:
    matchLabels:
      app: jaeger

  strategy:
    type: Recreate

  template:
    metadata:
      labels:
        app: jaeger

    spec:
      containers:
        - image: jaegertracing/all-in-one:1.52
          imagePullPolicy: IfNotPresent
          name: jaeger

          env:
            - name: BADGER_DIRECTORY_KEY
              value: /pv/badger/key

            - name: BADGER_DIRECTORY_VALUE
              value: /pv/badger/data

            - name: BADGER_EPHEMERAL
              value: "false"

            # -- Format https://pkg.go.dev/time#ParseDuration
            - name: BADGER_SPAN_STORE_TTL
              value: "120h0m"
              #value: "72h0m"

            - name: COLLECTOR_OTLP_ENABLED
              value: "true"

            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: ":9411"

#TODO: uncomment this:
#            - name: SPAN_STORAGE_TYPE
#              value: badger

            # -- must match ingress.spec.rules.http.paths.path
            - name: QUERY_BASE_PATH
              value: /jaeger

          ports:
            # TODO: drop any unused
            - containerPort: 4317
              name: otlp-grpc
              protocol: TCP

            - containerPort: 4318
              name: otlp-http

            - containerPort: 5778
              name: agnt-cnfgs-http
              protocol: TCP

            - containerPort: 6831
              name: agnt-j-thrft-co
              protocol: UDP

            - containerPort: 6832
              name: agnt-j-thrft-bn
              protocol: UDP

            - containerPort: 9411
              name: zipkin

            - containerPort: 16686
              name: browser-ui

            - containerPort: 14250
              name: model-proto

            - containerPort: 14268
              name: grpc-collector

            - containerPort: 14269
              name: admin-health-1

          #  # - 14271 = admin, health check
          #  # - 16685 = query service
          #  # - 16687 = query service

          resources:
            requests:
              cpu: 1500m

              # -- NOTE: when jaeger runs out of memory, the UI doesn't return any spans
              # -- Just restart since span data is persistent
              # -- See https://docs.docker.com/config/containers/resource_constraints/#limit-a-containers-access-to-memory
              memory: 1G

          volumeMounts:
            - mountPath: /pv
              name: beagle-volume
              readOnly: false

      volumes:
        - name: beagle-volume
          persistentVolumeClaim:
            claimName: jaeger-pvc


#  # TODO: set TTL on badger
#  # TODO: set max memory on badger

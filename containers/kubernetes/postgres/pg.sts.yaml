# --------------------------------------------------------------------
# -- Debugging:
# kubectl get sts --namespace=default
# kubectl describe sts postgres-sts --namespace=default
#
# kubectl exec -it sts/postgres-sts -- /bin/bash;
#
# kubectl get events --namespace=default
# kubectl logs --selector app=postgres --namespace=default
#
# -- Pod hostnames are like `postgres-sts-0`, `postgres-sts-1`
#
# -- Delete/Cleanup
# kubectl delete pvc postgres-sts
# TODO: delete the pod too
# --------------------------------------------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
  name: postgres-sts
  namespace: default

spec:
  replicas: 1

  selector:
    matchLabels:
      app: postgres

  serviceName: postgres-svc

  template:
    metadata:
      labels:
        app: postgres

    spec:
      containers:
        - env:
            - name: PGDATA
              value: /data/pgdata

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  # -- matches Secret::data.<key>
                  key: postgres-password
                  # -- matches Secret::metadata.name
                  name: postgres-secret

          envFrom:
            - configMapRef:
                name: postgres-cm

          image: postgres:16.2
          # image: postgres:15.6
          # image: postgres:14.11

          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready --host $HOSTNAME
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

          name: postgres

          ports:
            - containerPort: 5432

          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready --host $HOSTNAME
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3

          volumeMounts:
            - mountPath: /data
              name: postgres-volume

  updateStrategy:
    type: RollingUpdate

  volumeClaimTemplates:
    - metadata:
        name: postgres-volume

      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
